subprojects {

    apply plugin: 'groovy'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile "org.codehaus.groovy:groovy"
        compile"org.apache.avro:avro:${AVRO_VERSION}"
        compile "org.apache.avro:avro-tools:${AVRO_VERSION}"
        compile "com.amazonaws:amazon-kinesis-client:${KINESIS_CLIENT_LIBRARY_VERSION}"
        compile "com.amazonaws:amazon-kinesis-producer:${KINESIS_PRODUCER_LIBRARY_VERSION}"

        testCompile( "org.spockframework:spock-core:${SPOCK_VERSION}" ) {
            exclude module: 'groovy-all'
        }
    }

    task generateFromSchema( type: JavaExec ) {
        classpath = files( '../avro-tools-1.8.2.jar' )
        main = 'org.apache.avro.tool.Main'
        args = ['compile', 'schema', "${projectDir.path}/src/main/resources/schema/user.json", "${projectDir.path}/src/main/java"]
    }

    task writeData( type: JavaExec ) {
        classpath = sourceSets.main.runtimeClasspath
        main = 'org.kurron.avro.example.DatFileWriter'
        args = []
    }

    compileJava.dependsOn( generateFromSchema )
    compileTestGroovy.dependsOn( writeData )

    task hello {
        doLast { task ->
            println "I'm $task.project.name"
        }
    }
}

defaultTasks = ['clean', 'build']
